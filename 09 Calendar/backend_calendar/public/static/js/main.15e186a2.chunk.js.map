{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/UserForm.js","auth/LoginScreen.js","helpers/calendar-messages-es.js","ui/Navbar.js","calendar/CalendarEvent.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","calendar/CalendarModal.js","ui/AddNewFab.js","ui/DeleteEventFab.js","calendar/CalendarScreen.js","router/PrivateRouter.js","router/PublicRouter.js","router/AppRouter.js","reducers/AuthReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","login","user","type","payload","checkingFinish","logout","logoutClearEventActive","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","console","log","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","Navbar","useSelector","state","auth","onClick","clear","CalendarEvent","title","uiOpenModal","prepareEvents","events","map","end","moment","toDate","start","eventAddNew","eventCalendarActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","second","add","nowPlusOne","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","contentLabel","momentStart","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","inSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","checking","bgcolor","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"6OACMA,EAAUC,mDAGHC,EAAgB,SAACC,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAC7CC,EAAG,UAAMN,EAAN,YAAiBG,GAE1B,MAAe,QAAXE,EACOE,MAAMD,GAENC,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAKpBQ,EAAiB,SAACT,EAAUC,GAA0B,IAApBC,EAAmB,uDAAV,MAE9CC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAMD,EAAK,CACdD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,MCvCpBY,EACI,kBADJA,EAEK,mBAFLA,EAIO,wBAJPA,EAKI,uBALJA,EAQI,kBARJA,EASc,6BATdA,EAUK,wBAVLA,EAWK,wBAXLA,EAYI,wBAZJA,EAgBW,qCAhBXA,EAkBE,eAlBFA,EAqBG,gBCKVC,EAAQ,SAACC,GAAD,MAAW,CACrBC,KAAMH,EACNI,QAASF,IAkDPG,EAAiB,iBAAO,CAC1BF,KAAMH,IAYJM,EAAS,iBAAO,CAAEH,KAAMH,IAExBO,EAAyB,iBAAO,CAAEJ,KAAMH,I,uBC1FjCQ,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEdC,mBAASD,GAFK,mBAEnCE,EAFmC,KAE3BC,EAF2B,KAIpCC,EAAQ,WACVD,EAAUH,IAIRK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEJI,EAAOC,KAAOD,EAAOE,UAK9B,MAAO,CAACN,EAAQG,EAAmBD,I,eCb1BK,EAAc,WAGvB,IAAMC,EAAWC,cAHY,EAKgBZ,EAAQ,CACjDa,OAAQ,wBACRC,UAAW,WAPc,mBAKtBC,EALsB,KAKLT,EALK,OAU2BN,EAAQ,CAC5DgB,MAAO,UACPC,OAAQ,0BACRC,WAAY,SACZC,WAAY,KAda,mBAUtBC,EAVsB,KAUFC,EAVE,KAiBrBR,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UACRE,EAA2CI,EAA3CJ,MAAOC,EAAoCG,EAApCH,OAAQC,EAA4BE,EAA5BF,WAAYC,EAAgBC,EAAhBD,WAkBnC,OACI,qBAAKG,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBACIC,SAtBA,SAACC,GFxBC,IAACC,EAAOC,EEyB1BF,EAAEG,iBAEFhB,GF3BmBc,EE2BCZ,EF3BMa,EE2BEZ,EF1BhC,uCAAO,WAAOH,GAAP,iBAAAiB,EAAA,sEAEgBlD,EAAc,OAAQ,CAAE+C,QAAOC,YAAY,QAF3D,cAEGG,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG7C,EAHH,QAKM8C,IACLC,QAAQC,IAAI,oBACZ3C,aAAa4C,QAAQ,QAASjD,EAAKI,OACnCC,aAAa4C,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDzB,EAASlB,EAAM,CACX4C,IAAKpD,EAAKoD,IACV7B,KAAMvB,EAAKuB,SAGf8B,IAAKC,KAAK,QAAStD,EAAKuD,IAAK,SAf9B,2CAAP,yDE4CgB,UAGI,qBAAKlB,UAAU,aAAf,SACI,uBACI3B,KAAK,QACL2B,UAAU,eACVmB,YAAY,SACZjC,KAAK,SACLkC,SAAUpC,EACVG,MAAOI,MAGf,qBAAKS,UAAU,aAAf,SACI,uBACI3B,KAAK,WACL2B,UAAU,eACVmB,YAAY,gBACZjC,KAAK,YACLkC,SAAUpC,EACVG,MAAOK,MAGf,qBAAKQ,UAAU,aAAf,SACI,uBACI3B,KAAK,SACL2B,UAAU,YACVb,MAAM,kBAMtB,sBAAKa,UAAU,wBAAf,UACI,0CACA,uBAAMC,SAjDC,SAACC,GAEpB,GADAA,EAAEG,iBACET,IAAeC,EACf,OAAOmB,IAAKC,KAAK,QAAS,6BAA8B,SFPvC,IAACd,EAAOC,EAAUlB,EEUvCG,GFVsBc,EEUCR,EFVMS,EEUER,EFVQV,EEUIQ,EFR/C,uCAAO,WAAOL,GAAP,iBAAAiB,EAAA,sEACgBlD,EAAc,WAAY,CAAE+C,QAAOC,WAAUlB,QAAQ,QADrE,cACGqB,EADH,gBAEgBA,EAAKC,OAFrB,QAEG7C,EAFH,QAKM8C,IACLzC,aAAa4C,QAAQ,QAASjD,EAAKI,OACnCC,aAAa4C,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDzB,EAASlB,EAAM,CACX4C,IAAKpD,EAAKoD,IACV7B,KAAMvB,EAAKuB,SAIf8B,IAAKC,KAAK,QAAStD,EAAKuD,IAAK,SAf9B,2CAAP,yDEmDgB,UACI,qBAAKlB,UAAU,aAAf,SACI,uBACI3B,KAAK,OACL2B,UAAU,eACVmB,YAAY,SACZjC,KAAK,QACLC,MAAOO,EACP0B,SAAUrB,MAGlB,qBAAKC,UAAU,aAAf,SACI,uBACI3B,KAAK,QACL2B,UAAU,eACVmB,YAAY,SACZjC,KAAK,SACLC,MAAOQ,EACPyB,SAAUrB,MAGlB,qBAAKC,UAAU,aAAf,SACI,uBACI3B,KAAK,WACL2B,UAAU,eACVmB,YAAY,gBACZjC,KAAK,aACLC,MAAOS,EACPwB,SAAUrB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACI3B,KAAK,WACL2B,UAAU,eACVmB,YAAY,0BACZjC,KAAK,aACLC,MAAOU,EACPuB,SAAUrB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACI3B,KAAK,SACL2B,UAAU,YACVb,MAAM,+B,yBCnIzBkC,G,YAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNC,MAAO,SACPC,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,QCTNC,EAAS,WAElB,IAAM/C,EAAWC,cAETJ,EAASmD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCrD,KAMR,OACI,sBAAKc,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,SACKd,IAGL,yBACIsD,QAXQ,WAEhBnD,GJuEG,SAACA,GAEJrB,aAAayE,QACbpD,EAASb,KACTa,EAASZ,SIjEDuB,UAAU,yBAFd,UAGI,mBACIA,UAAU,wBACd,gDCvBH0C,EAAgB,SAAC,GAAe,IAAbV,EAAY,EAAZA,MAEpBW,EAAgBX,EAAhBW,MAAOvE,EAAS4D,EAAT5D,KACf,OACI,gCACI,+BAAOuE,IACP,sCAASvE,EAAKc,Y,kCCLb0D,EAAc,iBAAO,CAC9BvE,KAAMH,ICDG2E,EAAgB,WAAkB,IAAjBC,EAAgB,uDAAP,GAEnC,OAAOA,EAAOC,KACV,SAAC7C,GAAD,mBAAC,eACMA,GADP,IAEI8C,IAAKC,IAAO/C,EAAE8C,KAAKE,SACnBC,MAAOF,IAAO/C,EAAEiD,OAAOD,eCyB7BE,EAAc,SAACpB,GAAD,MAAY,CAC5B3D,KAAMH,EACNI,QAAS0D,IAOAqB,EAA2B,iBAAO,CAC3ChF,KAAMH,IA4BJoF,EAAe,SAACtB,GAAD,MAAY,CAC7B3D,KAAMH,EACNI,QAAS0D,IA0BPuB,GAAe,iBAAO,CACxBlF,KAAMH,IA4BJsF,GAAc,SAACV,GAAD,MAAa,CAC7BzE,KAAMH,EACNI,QAASwE,ICzHPW,GAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAInBC,IAAMC,cAAc,SAEpB,IAAMC,GAAMlB,MAASmB,QAAQ,GAAGC,OAAO,GAAGC,IAAI,EAAG,SAC3CC,GAAaJ,GAAIK,QAAQF,IAAI,EAAG,SAEhCG,GAAY,CACd9B,MAAO,GACP+B,MAAO,GACPvB,MAAOgB,GAAIjB,SACXF,IAAKuB,GAAWrB,UAGPyB,GAAgB,WAGzB,IAAMtF,EAAWC,cAHc,EAMGV,mBAASuF,GAAIjB,UANhB,mBAMxB0B,EANwB,KAMbC,EANa,OAODjG,mBAAS2F,GAAWrB,UAPnB,mBAOxB4B,EAPwB,KAOfC,EAPe,OAQKnG,oBAAS,GARd,mBAQxBoG,EARwB,KAQZC,EARY,KAWvBC,EAAc7C,aAAY,SAAAC,GAAK,OAAIA,EAAM6C,MAAzCD,UACAE,EAAgB/C,aAAY,SAAAC,GAAK,OAAIA,EAAM+C,YAA3CD,YAZuB,EAcKxG,mBAAS6F,IAdd,mBAcxBa,EAdwB,KAcZC,EAdY,KAgBvB5C,EAA6B2C,EAA7B3C,MAAO+B,EAAsBY,EAAtBZ,MAAOvB,EAAemC,EAAfnC,MAAOH,EAAQsC,EAARtC,IAI7BwC,qBAAU,WAEFD,EADAH,GAGcX,MAGnB,CAACW,EAAaG,IAEjB,IAAMvG,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBsG,EAAc,2BACPD,GADM,kBAERrG,EAAOC,KAAOD,EAAOE,UAK9B,SAASsG,IAGLpG,EAASgE,KACThE,EHrE2B,CAC/BhB,KAAMH,IGqEFqH,EAAcd,IAsDlB,OACI,eAAC,IAAD,CACIiB,OAAQR,EAERS,eAAgBF,EAChBG,MAAOnC,GACPzD,UAAU,QACV6F,eAAgB,IAChBC,aAAa,cAPjB,UAUI,mCAAOV,EAAe,gBAAkB,kBACxC,uBACA,uBACInF,SA7CS,SAACC,GAClBA,EAAEG,iBAEF,IAAM0F,EAAc9C,IAAOE,GAG3B,GAFkBF,IAAOD,GAEXgD,cAAcD,GACxB/E,IAAKC,KAAK,QAAS,mDAAoD,aAD3E,CAKA,GAAI0B,EAAMsD,OAAOC,OAAS,EACtB,OAAOjB,GAAc,GDhED,IAACjD,ECsErB3C,EADA+F,GDrEqBpD,ECsEKsD,EDnElC,uCAAO,WAAOjG,GAAP,iBAAAiB,EAAA,+EAGoBxC,EAAe,UAAD,OAAWkE,EAAMmE,IAAMnE,EAAO,OAHhE,cAGOzB,EAHP,gBAIoBA,EAAKC,OAJzB,QAIO7C,EAJP,QAOU8C,IACLC,QAAQC,IAAI,mBACZtB,EAASiE,EAAatB,MAEtBtB,QAAQC,IAAI,aAEZD,QAAQC,IAAIhD,GACZqD,IAAKC,KAAK,QAAStD,EAAKuD,IAAK,UAdlC,kDAiBCR,QAAQC,IAAR,MAjBD,0DAAP,uDA3C4B,SAACqB,GAC7B,8CAAO,WAAO3C,EAAU+G,GAAjB,uBAAA9F,EAAA,+DAEmB8F,IAAW7D,KAAzBxB,EAFL,EAEKA,IAAK7B,EAFV,EAEUA,KACbwB,QAAQC,IAAI,UAAY,CAAEqB,UAHvB,kBAKoBlE,EAAe,SAAUkE,EAAO,QALpD,cAKOzB,EALP,gBAMoBA,EAAKC,OANzB,OAMO7C,EANP,OAQC+C,QAAQC,IAAIhD,GAERA,EAAK8C,KACLuB,EAAMmE,GAAKxI,EAAK0I,OAAOF,GACvBnE,EAAM5D,KAAO,CACTkI,IAAKvF,EACL7B,QAEJwB,QAAQC,IAAIqB,GAEZ3C,EAAS+D,EAAYpB,KAlB1B,4GAAP,wDC+GiBuE,CAAiBjB,IAK9BL,GAAc,GACdQ,MAoBQzF,UAAU,YAFd,UAII,sBAAKA,UAAU,aAAf,UACI,wDACA,cAAC,IAAD,CACIoB,SArEU,SAAClB,GAE3B2E,EAAa3E,GACbqF,EAAc,2BACPD,GADM,IAETnC,MAAOjD,MAiEKf,MAAOyF,EACP5E,UAAU,oBAKlB,sBAAKA,UAAU,aAAf,UACI,qDACA,cAAC,IAAD,CACIoB,SAtEQ,SAAClB,GAEzB6E,EAAW7E,GACXqF,EAAc,2BACPD,GADM,IAETnC,MAAOjD,MAkEKf,MAAO2F,EACP0B,QAAS5B,EACT5E,UAAU,oBAIlB,uBACA,sBAAKA,UAAU,aAAf,UACI,mDACA,uBACI3B,KAAK,OACL2B,UAAS,wBAAmBgF,GAAc,cAC1C7D,YAAY,uBACZjC,KAAK,QACLC,MAAOwD,EACPvB,SAAUpC,EACVyH,aAAa,QAEjB,uBAAON,GAAG,YAAYnG,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACI3B,KAAK,OACL2B,UAAU,eACVmB,YAAY,QACZuF,KAAK,IACLxH,KAAK,QACLC,MAAOuF,EACPtD,SAAUpC,IAEd,uBAAOmH,GAAG,YAAYnG,UAAU,uBAAhC,yCAGJ,yBACI3B,KAAK,SACL2B,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDCpMP2G,GAAY,WAErB,IAAMtH,EAAWC,cAMjB,OACI,wBACIU,UAAU,sBACVwC,QAPgB,WACpBnD,EAASuD,MAIT,SAGI,mBAAG5C,UAAU,mBCZZ4G,GAAiB,WAE1B,IAAMvH,EAAWC,cAMjB,OACI,yBACIU,UAAU,4BACVwC,QAPa,WACjBnD,EHqEJ,uCAAO,WAAOA,EAAU+G,GAAjB,mBAAA9F,EAAA,6DAEK6F,EAAOC,IAAWf,SAASD,YAA3Be,GAFL,kBAKoBrI,EAAe,UAAD,OAAWqI,GAAM,GAAI,UALvD,cAKO5F,EALP,gBAMoBA,EAAKC,OANzB,QAMO7C,EANP,QASU8C,GAELpB,EAASkE,MAGTvC,IAAKC,KAAK,QAAStD,EAAKuD,IAAK,SAdlC,kDAiBCR,QAAQC,IAAR,MAjBD,0DAAP,0DGjEI,UAII,mBAAGX,UAAU,iBACb,qDCCZiD,IAAO4D,OAAO,MACd,IAAMC,GAAYC,YAAgB9D,KAuFnB+D,GAlFQ,WAEnB,IAAM3H,EAAWC,cAFQ,EAIO+C,aAAY,SAAAC,GAAK,OAAIA,EAAM+C,YAAnDvC,EAJiB,EAIjBA,OAAQsC,EAJS,EAITA,YACRrE,EAAQsB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCxB,IALiB,EAOOnC,mBAASZ,aAAaC,QAAQ,aAAe,SAPpD,mBAOlBgJ,EAPkB,KAORC,EAPQ,KASzB1B,qBAAU,WACNnG,EJsEJ,uCAAO,WAAOA,GAAP,mBAAAiB,EAAA,+EAGoBxC,EAAe,UAHnC,cAGOyC,EAHP,gBAKoBA,EAAKC,OALzB,OAKO7C,EALP,OAMC+C,QAAQC,IAAIhD,EAAKmF,QAGXA,EAASD,EAAclF,EAAKmF,QAIlCzD,EAASmE,GAAYV,IAbtB,kDAkBCpC,QAAQC,IAAR,MAlBD,0DAAP,yDIrEG,CAACtB,IAuCJ,OACI,sBAAKW,UAAU,kBAAf,UACI,cAAC,EAAD,IAEA,cAAC,IAAD,CACI8G,UAAWA,GACXhE,OAAQA,EACRqE,cAAc,QACdC,YAAY,MACZ/F,SAAUA,EACVgG,gBA1Ba,SAACrF,EAAOmB,EAAOH,EAAKsE,GAWzC,MAAO,CACH1B,MARU,CACV2B,gBAAkBxG,IAAQiB,EAAM5D,KAAKkI,IAAO,UAAY,UACxDkB,aAAc,MACdC,QAAS,GACTC,QAAS,WAmBLC,mBAhDU,SAACzH,GAEnBb,EAASuD,MA+CDgF,cA5CU,SAAC1H,GACnBb,EJNmC,CACvChB,KAAMH,EACNI,QII4B4B,KA4ChB2H,aAlCW,SAAC3H,GAEpBb,EAASgE,MAiCDyE,YAAY,EACZC,OAzCS,SAAC7H,GAClBgH,EAAYhH,GACZlC,aAAa4C,QAAQ,WAAYV,IAwCzB8H,KAAMf,EACNgB,WAAY,CACRjG,MAAOU,KAIf,cAAC,GAAD,IAEC0C,GAAe,cAAC,GAAD,IAGhB,cAAC,GAAD,Q,SC/FC8C,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDAEF,OACI,cAAC,IAAD,2BAAWA,GAAX,IACID,UAAW,SAACE,GAAD,OACNJ,EACM,cAACC,EAAD,eAAeG,IACf,cAAC,IAAD,CAAUC,GAAG,gBCZvBC,GAAc,SAAC,GAIrB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,gDAEF,OACI,cAAC,IAAD,2BAAWA,GAAX,IACID,UAAW,SAACE,GAAD,OACNJ,EACM,cAAC,IAAD,CAAUK,GAAG,MACb,cAACJ,EAAD,eAAeG,SCRzBG,GAAY,WAErB,IAAMrJ,EAAWC,cACTyB,EAAQsB,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCxB,IAYR,OAVAyE,qBAAU,WAENnG,EfuCJ,uCAAO,WAAOA,GAAP,iBAAAiB,EAAA,sEAEgBxC,EAAe,cAF/B,cAEGyC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGG7C,EAHH,QAMM8C,IAELzC,aAAa4C,QAAQ,QAASjD,EAAKI,OACnCC,aAAa4C,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDzB,EAASlB,EAAM,CACX4C,IAAKpD,EAAKoD,IACV7B,KAAMvB,EAAKuB,SAIfG,EAASd,GAjBV,2CAAP,yDerCG,CAACc,IAOA,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,GAAD,CACIsJ,OAAK,EACLC,KAAK,SACLP,UAAWjJ,EACX+I,kBAAmBpH,IAEvB,cAAC,GAAD,CACI4H,OAAK,EACLC,KAAK,IACLP,UAAWrB,GACXmB,kBAAmBpH,IAGvB,cAAC,IAAD,CAAUyH,GAAG,Y,SCrCvB7J,GAAe,CACjBkK,UAAU,G,SCDRlK,GAAe,CACjBmE,OAAQ,CAAC,CACLqD,IAAI,IAAItF,MAAOC,UACf6B,MAAO,yBACPQ,MAAOF,MAASC,SAChBF,IAAKC,MAASqB,IAAI,EAAG,SAASpB,SAC9B4F,QAAS,UACTpE,MAAO,oBACPtG,KAAM,CACFkI,IAAK,MACLpH,KAAM,cAGdkG,YAAa,MCdXzG,GAAe,CACjBuG,WAAW,GCGF6D,GAAcC,aAAgB,CACvC7D,GDDqB,WAAmC,IAAlC7C,EAAiC,uDAAzB3D,GAAcsK,EAAW,uCACvD,OAAQA,EAAO5K,MACX,KAAKH,EACD,OAAO,2BACAoE,GADP,IAEI4C,WAAW,IAEnB,KAAKhH,EACD,OAAO,2BACAoE,GADP,IAEI4C,WAAW,IAEnB,QACI,OAAO5C,ICXf+C,SFY2B,WAAmC,IAAlC/C,EAAiC,uDAAzB3D,GAAcsK,EAAW,uCAC7D,OAAQA,EAAO5K,MAEX,KAAKH,EACD,OAAO,2BACAoE,GADP,IAEI8C,YAAa6D,EAAO3K,UAG5B,KAAKJ,EACD,OAAO,2BACAoE,GADP,IAEIQ,OAAO,CAAEmG,EAAO3K,SAAV,oBAAsBgE,EAAMQ,WAE1C,KAAK5E,EACD,OAAO,2BACAoE,GADP,IAEI8C,YAAa,OAErB,KAAKlH,EACD,OAAO,2BACAoE,GADP,IAEIQ,OAAQR,EAAMQ,OAAOC,KACjB,SAAA7C,GAAC,OAAKA,EAAEiG,KAAO8C,EAAO3K,QAAQ6H,GAAM8C,EAAO3K,QAAU4B,OAGjE,KAAKhC,EACD,OAAO,2BACAoE,GADP,IAEIQ,OAAQR,EAAMQ,OAAOoG,QACjB,SAAAhJ,GAAC,OAAKA,EAAEiG,KAAO7D,EAAM8C,YAAYe,MAErCf,YAAa,OAErB,KAAKlH,EACD,OAAO,2BACAoE,GADP,IAEIQ,OAAO,aAAKmG,EAAO3K,WAE3B,KAAKJ,EACD,OAAO,eACAS,IAGX,QACI,OAAO2D,IExDfC,KHFuB,WAAmC,IAAlCD,EAAiC,uDAAzB3D,GAAcsK,EAAW,uCACzD,OAAQA,EAAO5K,MAEX,KAAKH,EACD,OAAO,uCACAoE,GACA2G,EAAO3K,SAFd,IAGIuK,UAAU,IAGlB,KAAK3K,EACD,OAAO,2BACAoE,GADP,IAEIuG,UAAU,IAElB,KAAK3K,EAIL,KAAKA,EACD,MAAO,CACH2K,UAAU,GAIlB,QACI,OAAOvG,M,SI5Bb6G,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAE9FC,GAAQC,aACjBT,GACAI,GACIM,aAAgBC,QCLXC,GAAc,WACvB,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,O,OCFZK,IAASC,OAEP,cAAC,GAAD,IAEAC,SAASC,eAAe,U","file":"static/js/main.15e186a2.chunk.js","sourcesContent":["\nconst baseUrl = process.env.REACT_APP_API_URL;\n\n\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token,\n            },\n        });\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token,\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}","export const types = {\n    isOpenModal: '[ui] Open modal',\n    isCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Start add new',\n    eventLogout: '[event] Event Logout',\n\n    \n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] clear Active Event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish Checking login state',\n    authStartLogin: '[auth] Start Login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start Token Renew',\n    authLogout: '[auth] Logout',\n\n}","import Swal from 'sweetalert2';\nimport { fetchSinToken, fetchWithToken } from '../helpers/fetch'\nimport { types } from '../types/types';\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            console.log('login exitoso :D');\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n})\n\nexport const startRegister = (email, password, name) => {\n\n    return async (dispatch) => {\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\n        const body = await resp.json();\n\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n\n        const resp = await fetchWithToken('auth/renew');\n        const body = await resp.json();\n\n\n        if (body.ok) {\n\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n\n        } else {\n            dispatch(checkingFinish);\n        }\n    }\n}\n\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n})\n\nexport const startLogout = () => {\n    return (dispatch) => {\n\n        localStorage.clear();\n        dispatch(logout());\n        dispatch(logoutClearEventActive());\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })\n\nconst logoutClearEventActive = () => ({ type: types.authLogout })","import { useState } from 'react';\n\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [values, handleInputChange, reset];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../actions/auth';\nimport { useForm } from '../hooks/UserForm';\nimport './login.css';\n\n\nexport const LoginScreen = () => {\n\n    // Distpach\n    const dispatch = useDispatch();\n\n    const [formLoginValues, handleInputChange] = useForm({\n        lEmail: 'rael.thasss@gmail.com',\n        lPassword: '123456'\n    });\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rName: 'gatotom',\n        rEmail: 'rael.thasssss@gmail.com',\n        rPassword1: '123456',\n        rPassword2: ''\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2, } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        // console.log(formLoginValues);\n        dispatch(startLogin(lEmail, lPassword));\n    }\n\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (rPassword1 !== rPassword2) {\n            return Swal.fire('Error', 'Passwords must be the same', 'error');\n        }\n\n        dispatch(startRegister(rEmail, rPassword1, rName));\n\n    }\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form\n                        onSubmit={handleLogin}\n                    >\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                onChange={handleInputChange}\n                                value={lEmail}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassowrd\"\n                                onChange={handleInputChange}\n                                value={lPassword}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogut = () => {\n\n        dispatch(startLogout());\n    }\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n\n            <button\n                onClick={handleLogut}\n                className=\"btn btn-outline-danger\">\n                <i\n                    className=\"fas fa sign-out-alt\"></i>\n                <span>Salir</span>\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n    \n    const { title, user } = event;\n    return (\n        <div>\n            <span>{title}</span>\n            <span>- {user.name}</span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\n\nexport const uiOpenModal = () => ({\n    type: types.isOpenModal\n})\nexport const uiCloseModal = () => ({\n    type: types.isCloseModal\n})","import moment from 'moment';\n\n\nexport const prepareEvents = (events = []) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment(e.end).toDate(),\n            start: moment(e.start).toDate(),\n        })\n    )\n}","import Swal from 'sweetalert2';\n\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const { uid, name } = getState().auth;\n        console.log('evento ' + { event })\n        try {\n            const resp = await fetchWithToken('events', event, 'POST');\n            const body = await resp.json();\n\n            console.log(body);\n\n            if (body.ok) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                console.log(event);\n\n                dispatch(eventAddNew(event));\n            }\n        } catch (error) {\n\n        }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\nexport const eventtSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventCalendarActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventStartUpdate = (event) => {\n\n\n    return async (dispatch) => {\n\n        try {\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n\n\n            if (body.ok) {\n                console.log('dispatching !!!')\n                dispatch(eventUpdated(event));\n            } else {\n                console.log('error !!!')\n\n                console.log(body);\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n\n\n            if (body.ok) {\n\n                dispatch(eventDeleted());\n            } else {\n\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        try {\n\n            const resp = await fetchWithToken('events');\n\n            const body = await resp.json();\n            console.log(body.events);\n\n\n            const events = prepareEvents(body.events);\n\n\n\n            dispatch(eventLoaded(events));\n\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\n","import React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../actions/ui';\n\nimport {  eventCalendarActiveEvent, eventStartAddNew, eventStartUpdate } from '../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).second(0).add(1, 'hours');\nconst nowPlusOne = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlusOne.toDate()\n}\n\nexport const CalendarModal = () => {\n\n\n    const dispatch = useDispatch();\n\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlusOne.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    //get the info store with the user selector\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const { title, notes, start, end } = formValues;\n\n    // useEffect to get info of the modal\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent)\n        } else {\n            setFormValues(initEvent);\n\n        }\n    }, [activeEvent, setFormValues]);\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    }\n\n\n    function closeModal() {\n\n\n        dispatch(eventCalendarActiveEvent())\n        dispatch(uiCloseModal())\n        setFormValues(initEvent);\n    }\n\n\n\n    const handleStartDateChange = (e) => {\n\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n\n    }\n    const handleEndDateChange = (e) => {\n\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentEnd.isSameOrAfter(momentStart)) {\n            Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\n\n            return;\n        }\n        if (title.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        //TODO realizar grabacion en la base de datos\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues))\n        } else {\n            dispatch(eventStartAddNew(formValues));\n        }\n\n\n\n        setTitleValid(true);\n        closeModal();\n\n\n    }\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            className=\"modal\"\n            closeTimeoutMS={200}\n            contentLabel=\"modal-fondo\"\n        >\n\n            <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo Evento'}</h1>\n            <hr />\n            <form\n                onSubmit={handleSubmit}\n                className=\"container\">\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        value={title}\n                        onChange={handleInputChange}\n                        autoComplete=\"off\"\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleOpenModal = () => {\n        dispatch(uiOpenModal());\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleOpenModal}>\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete());\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={handleDelete}\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span>Borrar evento</span>\n        </button>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es'\n\nimport { messages } from '../helpers/calendar-messages-es';\n\nimport { Navbar } from '../ui/Navbar'\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../actions/ui';\nimport { eventCalendarActiveEvent, eventStartLoading, eventtSetActive as eventSetActive } from '../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment) // or globalizeLoalizer\n\n\n\n\nconst CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    //TODO load the events from store \n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch])\n\n    const onDoubleClick = (e) => {\n\n        dispatch(uiOpenModal());\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n\n\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectedSlot = (e) => {\n        // console.log(e)\n        dispatch(eventCalendarActiveEvent());\n    }\n\n    const eventStyleGetter = (event, start, end, inSelected) => {\n\n\n\n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367cf7' : '#455660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block'\n        }\n\n        return {\n            style\n        }\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onSelectSlot={onSelectedSlot}\n                selectable={true}\n                onView={onViewChange}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <CalendarModal />\n\n            {activeEvent && <DeleteEventFab />}\n\n\n            <AddNewFab />\n        </div>\n    )\n}\n\nexport default CalendarScreen\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Component {...props} />)\n                    : (<Redirect to=\"/login\" />)\n            )}\n\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Redirect to=\"/\" />)\n                    : (<Component {...props} />)\n            )}\n\n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../auth/LoginScreen';\nimport CalendarScreen from '../calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRouter';\nimport { PublicRoute } from './PublicRouter';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        dispatch(startChecking());\n\n    }, [dispatch]);\n\n    // if (checking) {\n    //     return <h5>Espere ...</h5>\n    // }\n\n    return (\n        <Router>\n            <Switch >\n                <PublicRoute\n                    exact\n                    path=\"/login\"\n                    component={LoginScreen}\n                    isAuthenticated={!!uid}\n                />\n                <PrivateRoute\n                    exact\n                    path=\"/\"\n                    component={CalendarScreen}\n                    isAuthenticated={!!uid}\n                />\n\n                <Redirect to=\"/\" />\n            </Switch>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    checking: true,\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n        case types.eventLogout:\n            return {\n                checking: false\n            }\n\n            \n        default:\n            return state;\n    }\n}","import moment from 'moment';\nimport { types } from '../types/types';\n\nconst initialState = {\n    events: [{\n        id: new Date().getTime(),\n        title: 'Cumpleaños del jefe',\n        start: moment().toDate(),\n        end: moment().add(2, 'hours').toDate(),\n        bgcolor: '#fafafa',\n        notes: 'Comprar el pastel',\n        user: {\n            _id: '123',\n            name: 'fernando'\n        }\n    }],\n    activeEvent: null\n}\n\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [action.payload, ...state.events]\n            }\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id),\n                ),\n                activeEvent: null\n            }\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n        case types.authLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.isOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n        case types.isCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { authReducer } from './AuthReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth : authReducer\n}) ","import { applyMiddleware, compose, createStore } from \"redux\";\nimport { rootReducer } from \"../reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css'\n\nReactDOM.render(\n\n  <CalendarApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}